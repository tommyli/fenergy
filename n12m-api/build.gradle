// Tommy Li (tommy.li@firefire.co), 2017-01-16

buildscript {
  repositories {
    mavenLocal()
    mavenCentral()
  }
}

group "co.firefire.n12m.api"

ext {
  springBootVersion = '1.5.2.RELEASE'
}

apply plugin: 'org.springframework.boot'

repositories {
  mavenLocal()
  mavenCentral()
}

dependencies {
  compile("org.springframework.boot:spring-boot-starter-cache")
  compile("org.springframework.boot:spring-boot-starter-data-jpa")
  compile("org.springframework.boot:spring-boot-starter-logging")
  compile("org.springframework.boot:spring-boot-starter-mail")
  compile("org.springframework.boot:spring-boot-starter-web")
  compile("org.codehaus.groovy:groovy")
  compile("org.springframework.boot:spring-boot-autoconfigure")
  compile("org.springframework.boot:spring-boot-starter-actuator")
  compile("org.springframework.boot:spring-boot-starter-tomcat")
  compile("org.hibernate:hibernate-core:5.1.2.Final")
  compile("org.hibernate:hibernate-ehcache:5.1.2.Final")
  compile("org.hibernate:hibernate-java8:5.1.2.Final")
  compile("org.springframework.boot:spring-boot-starter-groovy-templates")
  runtime("com.h2database:h2")
  runtime("org.postgresql:postgresql:42.1.1.jre7")
  testCompile("org.springframework.boot:spring-boot-starter-test")
}

def sysProps = [
  'n12m.db.driver'  : project.property('n12m.db.driver'),
  'n12m.db.schema'  : project.property('n12m.db.schema'),
  'n12m.db.url'     : project.property('n12m.db.url'),
  'n12m.db.userid'  : project.property('n12m.db.userid'),
  'n12m.db.password': project.property('n12m.db.password')
]

bootRun {
  jvmArgs = ['-Dspring.output.ansi.enabled=always']
  systemProperties = sysProps
}

[bootRun, test].each { task ->
  configure(task) {
    systemProperties = sysProps
  }
}
